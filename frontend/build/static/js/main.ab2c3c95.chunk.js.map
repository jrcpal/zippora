{"version":3,"sources":["Components/Navigation.js","Components/Homepage.js","Components/Alert.js","Components/SetPreferencesForm.js","Components/SetPreferences.js","Components/ProductCard.js","Components/Carousel.js","apiSephora.js","Components/Loading.js","Components/FaceProducts.js","Components/EyeProducts.js","Components/LipProducts.js","Components/Products.js","Components/UserForm.js","Components/Login.js","Components/Signup.js","Components/Profile.js","Components/Routes.js","apiDatabase.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","currentUser","logout","username","className","exact","to","onClick","Homepage","Alert","error","SetPreferencesForm","fields","submit","setUpdateSuccess","useState","formData","errors","setErrors","is_new","isNew","is_organic","isOrganic","on_sale","onSale","fieldData","setFieldData","handleChange","evt","name","target","oldData","a","onSubmit","map","field","htmlFor","type","id","value","onChange","checked","length","i","SetPreferences","updateUser","ProductCard","product","displayName","src","image250","alt","brandName","currentSku","listPrice","Carousel","products","naturalSlideWidth","naturalSlideHeight","visibleSlides","totalSlides","infinite","isIntrinsicHeight","productId","BASE_URL","SephoraApi","endpoint","data","method","console","debug","url","headers","params","axios","response","categoryId","this","request","res","Loading","FaceProducts","setProducts","isLoading","setIsLoading","getFilteredProducts","getFaceProducts","filteredProducts","filter","salePrice","useEffect","_getInitialCategory","EyeProducts","getEyeProducts","LipProducts","getLipProducts","Products","UserForm","setFormData","preventDefault","autoComplete","Login","login","Signup","signUp","Profile","readOnly","Routes","isLoggedIn","path","process","DatabaseApi","Authorization","token","message","Array","isArray","newUser","loginCredentials","user","updateData","getUser","App","setToken","setCurrentUser","isAuthenticating","setIsAuthenticating","history","useHistory","updateSuccess","localStorage","setItem","push","removeItem","getItem","_checkForToken","jsonwebtoken","decode","_storeTokenAndSetUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab2c3c95.chunk.js","sourcesContent":["import { NavLink, Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\n\n/** Navigation: renders navigation bar\n *\n *\n *    App -> Navigation\n */\n\nfunction Navigation({ currentUser, logout }) {\n  const isLoggedIn = !!currentUser.username;\n\n  if (!isLoggedIn) {\n    return (\n      <div className=\"Navigation\">\n        <nav className=\"Navigation-nav\">\n          <NavLink exact to=\"/\">\n            Home\n          </NavLink>\n          <NavLink exact to=\"/login\">\n            Login\n          </NavLink>\n          <NavLink exact to=\"/signup\">\n            Sign Up\n          </NavLink>\n        </nav>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Navigation\">\n      <nav className=\"Navigation-nav\">\n        <NavLink exact to=\"/products\">\n          Your Products\n        </NavLink>\n        <NavLink exact to=\"/profile\">\n          Profile\n        </NavLink>\n        <Link to=\"/\" onClick={logout}>\n          Logout {currentUser.username}\n        </Link>\n      </nav>\n    </div>\n\n  );\n}\n\nexport default Navigation;\n","import { Link } from \"react-router-dom\";\n\n/** Displays login/signup or welcome page.\n *\n *    props:\n *       - currentUser: { username }\n */\n\nfunction Homepage() {\n  return (\n    <div className=\"Homepage\">\n      <p>Only your favorite makeup products from Sephora.</p>\n      <div>\n          <Link to=\"/login\">Login</Link> /\n          <Link to=\"/signup\">Sign up</Link>\n        </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","/** Alert: displays errors\n *    props:\n *      - error: \"error\"\n * \n *    { Login, Signup } -> Alert\n */\n\nfunction Alert({error}) {\n  return (\n  <div className=\"Alert\">\n    <p>{error}</p>\n  </div>\n  )\n}\n\nexport default Alert;\n","import { useState } from \"react\";\nimport Alert from \"./Alert\";\n\n/** SetPreferencesForm: controlled component that renders form and calls parent function\n *  on submit.\n *    props:\n *      - submit: parent function\n *      - checkboxes: [\"new\", \"organic\", \"sale\"]\n *\n *    states:\n *      - formData: { new, organic, sale }\n *      - errors: [\"error message\", ...]\n *\n *    { Preferences } -> SetPreferencesForm -> Alert\n */\nfunction SetPreferencesForm({ fields, submit, currentUser, setUpdateSuccess}) {\n  const [formData, setFormData] = useState({\n    username: currentUser.username\n  });\n  const [errors, setErrors] = useState([]);\n  const [fieldData, setFieldData] = useState({is_new: currentUser.isNew, is_organic: currentUser.isOrganic, on_sale: currentUser.onSale})\n\n//use a useEffect to pull checkbox values from the database\n//set setFormData with the values\n  \n  // handleChange: updates state on change\n  function handleChange(evt) {\n    //let value = evt.target.checked\n    const { name } = evt.target;\n    \n    setFieldData((oldData) => ({\n      ...oldData,\n      [name]: !fieldData[name],\n    }));\n  }\n\n\n  // handleSubmit: calls parent function on submit, catches errors\n  // and updates state\n  async function handleSubmit(evt) {\n    //evt.preventDefault();\n    try {\n      await submit({...formData, ...fieldData});\n      setUpdateSuccess(true)\n    } catch (err) {\n      setErrors(err);\n    }\n  }\n\n  return (\n    <form className=\"SetPreferencesForm\" onSubmit={handleSubmit}>\n      {fields.map((field) => (\n        <div key={field}>\n          <label htmlFor={field}>\n            {field}\n          </label>\n          <input\n            type=\"checkbox\"\n            id={field}\n            name={field}\n            value={formData[field]}\n            onChange={handleChange}\n            checked={field === \"is_new\" ? fieldData.is_new : field === \"is_organic\" ? fieldData.is_organic : fieldData.on_sale }\n          ></input>\n        </div>\n      ))}\n      {errors.length > 0\n        ? errors.map((error, i) => <Alert error={error} key={i} />)\n        : \"\"}\n      <button>Submit</button>\n    </form>\n  );\n}\n\nexport default SetPreferencesForm;\n","//import { useState } from \"react\";\nimport SetPreferencesForm from \"./SetPreferencesForm\";\n\n/** SetPreferences: Renders user preferences form and handles changes to user preferences.\n *    props: \n *      - preferences: from SetPreferencesForm\n *      - currentUser: { username }\n *      - updateUser: parent function\n *      - setUpdateSuccess: parent function to handle state when user changes to their preferences form are successful\n *    states:\n *      - formData: { username, is_new, is_organic, on_sale }\n *      - errors: [\"error message\", ...]\n *\n *    Routes -> SetPreferences -> SetPreferencesForm\n */\n\n\nfunction SetPreferences({currentUser, updateUser, setUpdateSuccess }) {\n\n  const fields = [\"is_new\", \"is_organic\", \"on_sale\"];\n\n  return (\n    <div className=\"SetPreferences\">\n      <p>Show products that are:</p>\n      <SetPreferencesForm  currentUser={currentUser} submit={updateUser} fields={fields} setUpdateSuccess={setUpdateSuccess} />\n    </div>\n  )\n}\n\nexport default SetPreferences","import \"./ProductCard.css\"\n\n/** \n * Displays card for each product in carousel\n */\n\nfunction ProductCard({product}) {\n  return (\n    <div className=\"ProductCard\">\n      <>\n      <p>{product.displayName}</p>\n      <img src={product.image250} alt=\"\"/>\n      <p>{product.brandName}</p>\n      <p>{product.currentSku.listPrice}</p>\n      </>\n    </div>\n  )\n}\n\n\nexport default ProductCard","import React from 'react'\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel'\nimport ProductCard from \"./ProductCard\"\nimport \"./Carousel.css\"\n\n\nfunction Carousel({products}) {\n\n    return (\n      <CarouselProvider\n        naturalSlideWidth={100}\n        naturalSlideHeight={125}\n        visibleSlides={5}\n        totalSlides={10}\n        infinite=\"true\"\n        isIntrinsicHeight=\"true\"\n      >\n        <Slider className=\"slider\">\n          {products.map((product) => (\n          <Slide className=\"slide\"><ProductCard product={product} key={product.productId} /></Slide>\n          ))}\n\n        </Slider>\n        <ButtonBack>Back</ButtonBack>\n        <ButtonNext>Next</ButtonNext>\n      </CarouselProvider>\n    );\n  }\n\nexport default Carousel","import axios from \"axios\";\n\nconst BASE_URL = 'https://sephora.p.rapidapi.com/' \n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n */\n\nclass SephoraApi {\n  //the token for interactive with the API will be stored here.\n  static token\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      'x-rapidapi-host': 'sephora.p.rapidapi.com',\n      'x-rapidapi-key': '372931dc8amsh54eccf7018f3d77p1a62cfjsnddec1badf116'\n    };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      // let message = err.response.data.error.message \n      // throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /*********************************************************** Carousels */\n\n  /** getFaceProducts: Get list of products for specific category from Sephora API with category id as parameter.\n   * \n   * \n   */\n\n  static async getFaceProducts() {\n    const params = {categoryId: 'cat130058'}\n    let res = await this.request(`products/list`, params);\n    return res.products;\n  }\n\n  static async getEyeProducts() {\n    const params = {categoryId: 'cat130054'}\n    let res = await this.request(`products/list`, params);\n    return res.products;\n  }\n\n  static async getLipProducts() {\n    const params = {categoryId: 'cat180010'}\n    let res = await this.request(`products/list`, params);\n    return res.products;\n  }\n\n}\n\n\n\n\nexport default SephoraApi;\n","/** Displays a loading message\n *\n *\n */\n\nfunction Loading() {\n  return (\n    <div className=\"Loading\">\n      <p>Loading...</p>\n    </div>\n  );\n}\n\nexport default Loading;\n","\nimport { useEffect, useState } from \"react\";\nimport Carousel from \"./Carousel\"\nimport SephoraApi from \"../apiSephora\"\nimport Loading from \"./Loading\"\n\n\n/** Displays face products from Sephora. Takes user preferences to filter product results. \n *\n *    props:\n *       - currentUser: { username, is_new, is_organic, on_sale }\n */\n\nfunction FaceProducts({ currentUser }) {\n  console.debug(\"FaceProducts component rendered.\");\n\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  \n  // gets all products on mount\n  useEffect(function getInitialCategory() {\n    const _getInitialCategory = async function () {\n      await getFilteredProducts()\n      setIsLoading(false);\n    };\n    _getInitialCategory();\n  }, []);\n      \n      \n      async function getFilteredProducts() {\n        const products = await SephoraApi.getFaceProducts();\n        let filteredProducts;\n\n          //condition where user selects no filter\n          if (!currentUser.isNew && !currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products\n          }\n          //condition where user only selects new\n          else if (currentUser.isNew && !currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew) \n          }\n          //condition where user only selects organic\n          else if (!currentUser.isNew && currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isOrganic) \n          }\n          //condition where user only selects sale\n          else if (!currentUser.isNew && !currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.salePrice) \n          }\n      \n          //condition where user selects new + organic\n          else if (currentUser.isNew && currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.isOrganic) \n          }\n          //condition where user selects new + sale\n          else if (currentUser.isNew && !currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.salePrice) \n          }\n      \n          //condition where user selects organic + sale\n          else if (!currentUser.isNew && currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isOrganic && product.currentSku.salePrice) \n          }\n          //condition where user selects new + organic + sale\n          else if (currentUser.isNew && currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.isOrganic && product.currentSku.salePrice) \n          }\n          //default non-filtered case\n          else { \n            filteredProducts = products \n          }\n          setProducts(filteredProducts);\n      }\n\n  \n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"FaceProducts\">\n      {products.length === 0 ? <p>No face products found, please check your preferences</p> : <Carousel products={products}/>}\n    </div>\n  )\n}\n\n\nexport default FaceProducts;\n","\nimport { useEffect, useState } from \"react\";\nimport Carousel from \"./Carousel\"\nimport SephoraApi from \"../apiSephora\"\nimport Loading from \"./Loading\"\n\n/** Displays eye products from Sephora. Takes user preferences to filter product results. \n *\n *    props:\n *       - currentUser: { username, is_new, is_organic, on_sale }\n */\n\nfunction EyeProducts({ currentUser }) {\n  console.debug(\"EyeProducts component rendered.\");\n\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  \n  // gets all products on mount\n  useEffect(function getInitialCategory() {\n    const _getInitialCategory = async function () {\n      await getFilteredProducts()\n      setIsLoading(false);\n    };\n    _getInitialCategory();\n  }, []);\n      \n      \n      async function getFilteredProducts() {\n        const products = await SephoraApi.getEyeProducts();\n        let filteredProducts;\n\n          //condition where user selects no filter\n          if (!currentUser.isNew && !currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products\n          }\n          //condition where user only selects new\n          else if (currentUser.isNew && !currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew) \n          }\n          //condition where user only selects organic\n          else if (!currentUser.isNew && currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isOrganic) \n          }\n          //condition where user only selects sale\n          else if (!currentUser.isNew && !currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.salePrice) \n          }\n      \n          //condition where user selects new + organic\n          else if (currentUser.isNew && currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.isOrganic) \n          }\n          //condition where user selects new + sale\n          else if (currentUser.isNew && !currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.salePrice) \n          }\n      \n          //condition where user selects organic + sale\n          else if (!currentUser.isNew && currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isOrganic && product.currentSku.salePrice) \n          }\n          //condition where user selects new + organic + sale\n          else if (currentUser.isNew && currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.isOrganic && product.currentSku.salePrice) \n          }\n          //default non-filtered case\n          else { \n            filteredProducts = products \n          }\n          \n          setProducts(filteredProducts);\n      }\n\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"EyeProducts\">\n      {products.length === 0 ? <p>No eye products found, please check your preferences</p> : <Carousel products={products}/>}\n    </div>\n  )\n}\n\n\nexport default EyeProducts;\n","\nimport { useEffect, useState } from \"react\";\nimport Carousel from \"./Carousel\"\nimport SephoraApi from \"../apiSephora\"\nimport Loading from \"./Loading\"\n\n/** Displays lip products from Sephora. Takes user preferences to filter product results. \n *\n *    props:\n *       - currentUser: { username, is_new, is_organic, on_sale }\n */\n\nfunction LipProducts({ currentUser }) {\n  console.debug(\"LipProducts component rendered.\");\n\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  \n  // gets all products on mount\n  useEffect(function getInitialCategory() {\n    const _getInitialCategory = async function () {\n      await getFilteredProducts()\n      setIsLoading(false);\n    };\n    _getInitialCategory();\n  }, []);\n      \n      \n      async function getFilteredProducts() {\n        const products = await SephoraApi.getLipProducts();\n        let filteredProducts;\n\n          //condition where user selects no filter\n          if (!currentUser.isNew && !currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products\n          }\n          //condition where user only selects new\n          else if (currentUser.isNew && !currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew) \n          }\n          //condition where user only selects organic\n          else if (!currentUser.isNew && currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isOrganic) \n          }\n          //condition where user only selects sale\n          else if (!currentUser.isNew && !currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.salePrice) \n          }\n      \n          //condition where user selects new + organic\n          else if (currentUser.isNew && currentUser.isOrganic && !currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.isOrganic) \n          }\n          //condition where user selects new + sale\n          else if (currentUser.isNew && !currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.salePrice) \n          }\n      \n          //condition where user selects organic + sale\n          else if (!currentUser.isNew && currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isOrganic && product.currentSku.salePrice) \n          }\n          //condition where user selects new + organic + sale\n          else if (currentUser.isNew && currentUser.isOrganic && currentUser.onSale ) {\n            filteredProducts = products.filter((product) => product.currentSku.isNew && product.currentSku.isOrganic && product.currentSku.salePrice) \n          }\n          //default non-filtered case\n          else { \n            filteredProducts = products \n          }\n          setProducts(filteredProducts);\n      }\n\n  \n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"LipProducts\">\n      {products.length === 0 ? <p>No lip products found, please check your preferences</p> : <Carousel products={products}/>}\n    </div>\n  )\n}\n\n\nexport default LipProducts;\n","import SetPreferences from \"./SetPreferences\";\nimport FaceProducts from \"./FaceProducts\"\nimport EyeProducts from \"./EyeProducts\"\nimport LipProducts from \"./LipProducts\"\n\n/** Displays users preferences and products\n *\n *    props:\n *       - currentUser: { username }\n *       - updateUser\n *       - setUpdateSuccess\n * \n */\n\nfunction Products({ currentUser, updateUser, setUpdateSuccess }){\n\n\nreturn (\n  <div className=\"Products\">\n    <>\n    <h4>Only the products you want from Sephora</h4>\n    <p>Welcome back, {currentUser.username}</p>\n    <SetPreferences currentUser={currentUser} updateUser={updateUser} setUpdateSuccess={setUpdateSuccess}/>\n    <FaceProducts currentUser={currentUser}/>\n    <EyeProducts currentUser={currentUser}/>\n    <LipProducts currentUser={currentUser}/>\n    </>\n  </div>\n)\n}\n\n\nexport default Products;\n","import { useState } from \"react\";\nimport Alert from \"./Alert\";\n\nimport \"./UserForm.css\";\n\n\n/** UserForm: controlled component that renders form and calls parent function\n *  on submit.\n *    props:\n *      - submit: parent function\n *      - fields: [\"username\", \"password\", ...]\n *\n *    states:\n *      - formData: { username, password, ... }\n *      - errors: [\"error message\", ...]\n *\n *    { Login, Signup } -> UserForm -> Alert\n */\nfunction UserForm({ submit, fields }) {\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState([]);\n\n  // handleChange: updates state on change\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n\n    setFormData((oldData) => ({\n      ...oldData,\n      [name]: value,\n    }));\n  }\n\n  // handleSubmit: calls parent function on submit, catches errors\n  // and updates state\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    try {\n      await submit(formData);\n    } catch (err) {\n      setErrors(err);\n    }\n  }\n\n  return (\n    <form className=\"UserForm\" onSubmit={handleSubmit}>\n      {fields.map((field) => (\n        <div key={field}>\n          <label htmlFor={field}>\n            {field}\n          </label>\n          <input\n            type={field === \"password\" ? field : \"text\"}\n            id={field}\n            name={field}\n            value={formData[field]}\n            onChange={handleChange}\n            autoComplete={field === \"password\" ? \"off\" : \"\"}\n          ></input>\n        </div>\n      ))}\n      {errors.length > 0\n        ? errors.map((error, i) => <Alert error={error} key={i} />)\n        : \"\"}\n      <button>Submit</button>\n    </form>\n    \n  );\n}\n\nexport default UserForm;\n","import UserForm from \"./UserForm\";\n\n/** Login: Renders Login form and handles login.\n *    props:\n *      - login: parent function\n *\n *    Routes -> Login -> UserForm\n */\n\n\nfunction Login({login}) {\n\n  const fields = [\"username\", \"password\"];\n\n  return (\n    <div className=\"Login\">\n      <p>Login to view your products</p>\n      <UserForm  submit={login} fields={fields} />\n    </div>\n  )\n}\n\nexport default Login","import UserForm from \"./UserForm\";\n\n/** Signup: Renders Login form and handles login.\n *    props:\n *      - signUp: parent function\n *\n *    Routes -> Signup -> UserForm\n */\nfunction Signup({ signUp }) {\n  const fields = [\"username\", \"password\"];\n\n  return (\n    <div className=\"Signup\">\n      <p>Signup to set your preferences and view your favorite Sephora products</p>\n      <UserForm submit={signUp} fields={fields} />\n    </div>\n  \n  )\n}\n\nexport default Signup;\n\n\n\n","import { useState } from \"react\";\nimport Alert from \"./Alert\";\n//import \"./Profile.css\";\n\n/** Profile: renders form to update user password\n *    props: \n *      - currentUser: { username }\n *      - updateUser: parent function\n * \n *    states:\n *      - formData: { username }\n *      - errors: [\"error message\", ...]\n * \n *    Routes -> Profile\n */\nfunction Profile({ currentUser, updateUser }) {\n  const [formData, setFormData] = useState({\n    username: currentUser.username\n  });\n  const [errors, setErrors] = useState([]);\n\n  // handleChange: updates state on change\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n\n    setFormData((oldData) => ({\n      ...oldData,\n      [name]: value,\n    }));\n  }\n\n  // handleSubmit: calls parent function on submit, catches errors\n  // and updates state\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    try {\n      await updateUser(formData);\n    } catch (err) {\n      setErrors(err);\n    }\n  }\n\n  return (\n    <div className=\"Profile\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          onChange={handleChange}\n          readOnly={false}\n          id=\"username\"\n          name=\"username\"\n          value={formData.username}\n        ></input>\n        <label htmlFor=\"password\">Enter new password</label>\n        <input\n          onChange={handleChange}\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n        ></input>\n        {errors.length > 0\n          ? errors.map((error, i) => <Alert error={error} key={i} />)\n          : \"\"}\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Profile;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport Homepage from \"./Homepage\"\nimport Products from \"./Products\"\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Profile from \"./Profile\"\n\n/** Directs user to correct endpoint\n *    props:\n *      - signUp: parent function\n *      - login: parent function\n *      - updateUser: parent function\n *      - setUpdateSuccess: parent function\n *\n *   App -> Routes -> { Homepage, Login, Signup, Products, Profile }\n */\n\nfunction Routes({currentUser, login, signUp, updateUser, setUpdateSuccess}) {\n\n  const isLoggedIn = !!currentUser.username;\n\n  return (\n\n    <div className=\"Routes\">\n      <Switch>\n        <Route exact path=\"/\">\n          {isLoggedIn ? <Redirect to=\"/products\" /> : <Homepage />}\n        </Route>\n        <Route exact path=\"/login\">\n          {isLoggedIn ? <Redirect to=\"/\" /> : <Login login={login} />}\n        </Route>\n        <Route exact path=\"/signup\">\n          {isLoggedIn ? <Redirect to=\"/\" /> : <Signup signUp={signUp} />}\n        </Route>\n        <Route exact path=\"/products\">\n          {isLoggedIn ? <Products currentUser={currentUser} updateUser={updateUser} setUpdateSuccess={setUpdateSuccess}/> : <Redirect to=\"/\" />}\n        </Route>\n        <Route exact path=\"/profile\">\n          {isLoggedIn ? (\n            <Profile currentUser={currentUser} updateUser={updateUser} />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n\n  );\n}\n\nexport default Routes;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:8000\"\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the Database.\n */\n\nclass DatabaseApi {\n  //the token for interactive with the API will be stored here.\n  static token\n\n  static async request(endpoint, data = {}, method = \"get\") {\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      'Content-Type': \"application/json\",\n      Authorization: `Bearer ${DatabaseApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /*********************************************************** Auth */\n  /** signUp: Sign up new user.\n   *    Accepts: newUser = { username, password }\n   *    Returns: \"token\"\n   */\n  static async signUp(newUser) {\n    let res = await this.request(`auth/register`, newUser, \"post\");\n    return res.token;\n  }\n\n  /** login: Authorizes user.\n   *    Accepts: loginCredentials = { username, password }\n   *    Returns: \"token\"\n   */\n  static async login(loginCredentials) {\n    let res = await this.request(`auth/token`, loginCredentials, \"post\");\n    return res.token;\n  }\n\n  /*********************************************************** Users */\n\n  static async getUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async updateUser({ username, ...updateData }) {\n    await this.request(`users/${username}`, updateData, \"patch\");\n    let user = await DatabaseApi.getUser(username);\n    return user;\n  }\n\n}\n\n\n\n\nexport default DatabaseApi;\n","import './App.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport jsonwebtoken from \"jsonwebtoken\";\n\nimport Navigation from \"./Components/Navigation\"\nimport Routes from \"./Components/Routes\"\nimport DatabaseApi from './apiDatabase.js'\nimport Loading from './Components/Loading'\n\n\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState({});\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const history = useHistory();\n\n  //setUpdateSuccess: parent function to handle state when user change submits to their setPreferencesForm are successful\n  const [updateSuccess, setUpdateSuccess] = useState(false)\n  \n\n  // if token in local storage, logs in\n  useEffect(function checkForToken() {\n    async function _checkForToken() {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        setToken(token);\n      } else {\n        setIsAuthenticating(false);\n      }\n    }\n\n    _checkForToken();\n  }, []);\n\n  // sets token in DatabaseApi, gets and sets current user\n  useEffect(\n    function storeTokenAndSetUser() {\n      async function _storeTokenAndSetUser() {\n        try {\n          DatabaseApi.token = token;\n          const { username } = jsonwebtoken.decode(token);\n          const user = await DatabaseApi.getUser(username);\n          setCurrentUser(user);\n        } catch {\n          console.error(\"INVALID TOKEN RECEIVED.\");\n          logout();\n        } finally {\n          setIsAuthenticating(false);\n        }\n      }\n\n      if (token) _storeTokenAndSetUser();\n    },\n    [token, updateSuccess]\n  );\n\n  // signUp: registers user with API and logs in\n  async function signUp(newUser) {\n    const token = await DatabaseApi.signUp(newUser);\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    history.push(\"/\");\n  }\n\n  // login: authenticates user with Database API and logs in\n  async function login(loginCredentials) {\n    const token = await DatabaseApi.login(loginCredentials);\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    history.push(\"/\");\n  }\n\n  // logout: clears localStorage token, DatabaseApi token, and current user state\n  function logout() {\n    setToken(\"\");\n    DatabaseApi.token = \"\";\n    localStorage.removeItem(\"token\");\n    setCurrentUser({});\n  }\n\n  // updateUser: updates user with Database, sets currentUser to updated user\n  async function updateUser(updateData) {\n    const user = await DatabaseApi.updateUser(updateData);\n    setCurrentUser(user);\n    //history.push(\"/\");\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navigation currentUser={currentUser} logout={logout}/>\n        <h2>Zippora</h2>\n        {!isAuthenticating ? (\n          <>\n          <Routes\n            login={login}\n            signUp={signUp}\n            currentUser={currentUser} \n            updateUser={updateUser}\n            setUpdateSuccess={setUpdateSuccess}\n          />\n          </>\n        ) : (\n          <Loading />\n        )}\n        </BrowserRouter>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}